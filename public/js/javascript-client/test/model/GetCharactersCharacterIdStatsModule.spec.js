/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.6
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetCharactersCharacterIdStatsModule', function() {
    it('should create an instance of GetCharactersCharacterIdStatsModule', function() {
      // uncomment below and update the code to test GetCharactersCharacterIdStatsModule
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdStatsModule);
    });

    it('should have the property activationsArmorHardener (base name: "activations_armor_hardener")', function() {
      // uncomment below and update the code to test the property activationsArmorHardener
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsArmorRepairUnit (base name: "activations_armor_repair_unit")', function() {
      // uncomment below and update the code to test the property activationsArmorRepairUnit
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsArmorResistanceShiftHardener (base name: "activations_armor_resistance_shift_hardener")', function() {
      // uncomment below and update the code to test the property activationsArmorResistanceShiftHardener
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsAutomatedTargetingSystem (base name: "activations_automated_targeting_system")', function() {
      // uncomment below and update the code to test the property activationsAutomatedTargetingSystem
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsBastion (base name: "activations_bastion")', function() {
      // uncomment below and update the code to test the property activationsBastion
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsBombLauncher (base name: "activations_bomb_launcher")', function() {
      // uncomment below and update the code to test the property activationsBombLauncher
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsCapacitorBooster (base name: "activations_capacitor_booster")', function() {
      // uncomment below and update the code to test the property activationsCapacitorBooster
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsCargoScanner (base name: "activations_cargo_scanner")', function() {
      // uncomment below and update the code to test the property activationsCargoScanner
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsCloakingDevice (base name: "activations_cloaking_device")', function() {
      // uncomment below and update the code to test the property activationsCloakingDevice
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsCloneVatBay (base name: "activations_clone_vat_bay")', function() {
      // uncomment below and update the code to test the property activationsCloneVatBay
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsCynosuralField (base name: "activations_cynosural_field")', function() {
      // uncomment below and update the code to test the property activationsCynosuralField
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsDamageControl (base name: "activations_damage_control")', function() {
      // uncomment below and update the code to test the property activationsDamageControl
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsDataMiners (base name: "activations_data_miners")', function() {
      // uncomment below and update the code to test the property activationsDataMiners
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsDroneControlUnit (base name: "activations_drone_control_unit")', function() {
      // uncomment below and update the code to test the property activationsDroneControlUnit
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsDroneTrackingModules (base name: "activations_drone_tracking_modules")', function() {
      // uncomment below and update the code to test the property activationsDroneTrackingModules
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsEccm (base name: "activations_eccm")', function() {
      // uncomment below and update the code to test the property activationsEccm
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsEcm (base name: "activations_ecm")', function() {
      // uncomment below and update the code to test the property activationsEcm
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsEcmBurst (base name: "activations_ecm_burst")', function() {
      // uncomment below and update the code to test the property activationsEcmBurst
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsEnergyDestabilizer (base name: "activations_energy_destabilizer")', function() {
      // uncomment below and update the code to test the property activationsEnergyDestabilizer
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsEnergyVampire (base name: "activations_energy_vampire")', function() {
      // uncomment below and update the code to test the property activationsEnergyVampire
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsEnergyWeapon (base name: "activations_energy_weapon")', function() {
      // uncomment below and update the code to test the property activationsEnergyWeapon
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsFestivalLauncher (base name: "activations_festival_launcher")', function() {
      // uncomment below and update the code to test the property activationsFestivalLauncher
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsFrequencyMiningLaser (base name: "activations_frequency_mining_laser")', function() {
      // uncomment below and update the code to test the property activationsFrequencyMiningLaser
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsFueledArmorRepairer (base name: "activations_fueled_armor_repairer")', function() {
      // uncomment below and update the code to test the property activationsFueledArmorRepairer
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsFueledShieldBooster (base name: "activations_fueled_shield_booster")', function() {
      // uncomment below and update the code to test the property activationsFueledShieldBooster
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsGangCoordinator (base name: "activations_gang_coordinator")', function() {
      // uncomment below and update the code to test the property activationsGangCoordinator
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsGasCloudHarvester (base name: "activations_gas_cloud_harvester")', function() {
      // uncomment below and update the code to test the property activationsGasCloudHarvester
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsHullRepairUnit (base name: "activations_hull_repair_unit")', function() {
      // uncomment below and update the code to test the property activationsHullRepairUnit
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsHybridWeapon (base name: "activations_hybrid_weapon")', function() {
      // uncomment below and update the code to test the property activationsHybridWeapon
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsIndustrialCore (base name: "activations_industrial_core")', function() {
      // uncomment below and update the code to test the property activationsIndustrialCore
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsInterdictionSphereLauncher (base name: "activations_interdiction_sphere_launcher")', function() {
      // uncomment below and update the code to test the property activationsInterdictionSphereLauncher
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsMicroJumpDrive (base name: "activations_micro_jump_drive")', function() {
      // uncomment below and update the code to test the property activationsMicroJumpDrive
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsMiningLaser (base name: "activations_mining_laser")', function() {
      // uncomment below and update the code to test the property activationsMiningLaser
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsMissileLauncher (base name: "activations_missile_launcher")', function() {
      // uncomment below and update the code to test the property activationsMissileLauncher
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsPassiveTargetingSystem (base name: "activations_passive_targeting_system")', function() {
      // uncomment below and update the code to test the property activationsPassiveTargetingSystem
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsProbeLauncher (base name: "activations_probe_launcher")', function() {
      // uncomment below and update the code to test the property activationsProbeLauncher
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsProjectedEccm (base name: "activations_projected_eccm")', function() {
      // uncomment below and update the code to test the property activationsProjectedEccm
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsProjectileWeapon (base name: "activations_projectile_weapon")', function() {
      // uncomment below and update the code to test the property activationsProjectileWeapon
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsPropulsionModule (base name: "activations_propulsion_module")', function() {
      // uncomment below and update the code to test the property activationsPropulsionModule
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteArmorRepairer (base name: "activations_remote_armor_repairer")', function() {
      // uncomment below and update the code to test the property activationsRemoteArmorRepairer
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteCapacitorTransmitter (base name: "activations_remote_capacitor_transmitter")', function() {
      // uncomment below and update the code to test the property activationsRemoteCapacitorTransmitter
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteEcmBurst (base name: "activations_remote_ecm_burst")', function() {
      // uncomment below and update the code to test the property activationsRemoteEcmBurst
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteHullRepairer (base name: "activations_remote_hull_repairer")', function() {
      // uncomment below and update the code to test the property activationsRemoteHullRepairer
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteSensorBooster (base name: "activations_remote_sensor_booster")', function() {
      // uncomment below and update the code to test the property activationsRemoteSensorBooster
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteSensorDamper (base name: "activations_remote_sensor_damper")', function() {
      // uncomment below and update the code to test the property activationsRemoteSensorDamper
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteShieldBooster (base name: "activations_remote_shield_booster")', function() {
      // uncomment below and update the code to test the property activationsRemoteShieldBooster
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsRemoteTrackingComputer (base name: "activations_remote_tracking_computer")', function() {
      // uncomment below and update the code to test the property activationsRemoteTrackingComputer
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsSalvager (base name: "activations_salvager")', function() {
      // uncomment below and update the code to test the property activationsSalvager
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsSensorBooster (base name: "activations_sensor_booster")', function() {
      // uncomment below and update the code to test the property activationsSensorBooster
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsShieldBooster (base name: "activations_shield_booster")', function() {
      // uncomment below and update the code to test the property activationsShieldBooster
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsShieldHardener (base name: "activations_shield_hardener")', function() {
      // uncomment below and update the code to test the property activationsShieldHardener
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsShipScanner (base name: "activations_ship_scanner")', function() {
      // uncomment below and update the code to test the property activationsShipScanner
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsSiege (base name: "activations_siege")', function() {
      // uncomment below and update the code to test the property activationsSiege
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsSmartBomb (base name: "activations_smart_bomb")', function() {
      // uncomment below and update the code to test the property activationsSmartBomb
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsStasisWeb (base name: "activations_stasis_web")', function() {
      // uncomment below and update the code to test the property activationsStasisWeb
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsStripMiner (base name: "activations_strip_miner")', function() {
      // uncomment below and update the code to test the property activationsStripMiner
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsSuperWeapon (base name: "activations_super_weapon")', function() {
      // uncomment below and update the code to test the property activationsSuperWeapon
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsSurveyScanner (base name: "activations_survey_scanner")', function() {
      // uncomment below and update the code to test the property activationsSurveyScanner
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsTargetBreaker (base name: "activations_target_breaker")', function() {
      // uncomment below and update the code to test the property activationsTargetBreaker
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsTargetPainter (base name: "activations_target_painter")', function() {
      // uncomment below and update the code to test the property activationsTargetPainter
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsTrackingComputer (base name: "activations_tracking_computer")', function() {
      // uncomment below and update the code to test the property activationsTrackingComputer
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsTrackingDisruptor (base name: "activations_tracking_disruptor")', function() {
      // uncomment below and update the code to test the property activationsTrackingDisruptor
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsTractorBeam (base name: "activations_tractor_beam")', function() {
      // uncomment below and update the code to test the property activationsTractorBeam
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsTriage (base name: "activations_triage")', function() {
      // uncomment below and update the code to test the property activationsTriage
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsWarpDisruptFieldGenerator (base name: "activations_warp_disrupt_field_generator")', function() {
      // uncomment below and update the code to test the property activationsWarpDisruptFieldGenerator
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property activationsWarpScrambler (base name: "activations_warp_scrambler")', function() {
      // uncomment below and update the code to test the property activationsWarpScrambler
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property linkWeapons (base name: "link_weapons")', function() {
      // uncomment below and update the code to test the property linkWeapons
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property overload (base name: "overload")', function() {
      // uncomment below and update the code to test the property overload
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

    it('should have the property repairs (base name: "repairs")', function() {
      // uncomment below and update the code to test the property repairs
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStatsModule();
      //expect(instance).to.be();
    });

  });

}));
