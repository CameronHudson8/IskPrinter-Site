/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.6
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetCharactersCharacterIdStats200Ok', function() {
    it('should create an instance of GetCharactersCharacterIdStats200Ok', function() {
      // uncomment below and update the code to test GetCharactersCharacterIdStats200Ok
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdStats200Ok);
    });

    it('should have the property year (base name: "year")', function() {
      // uncomment below and update the code to test the property year
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property character (base name: "character")', function() {
      // uncomment below and update the code to test the property character
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property combat (base name: "combat")', function() {
      // uncomment below and update the code to test the property combat
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property industry (base name: "industry")', function() {
      // uncomment below and update the code to test the property industry
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property inventory (base name: "inventory")', function() {
      // uncomment below and update the code to test the property inventory
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property isk (base name: "isk")', function() {
      // uncomment below and update the code to test the property isk
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property market (base name: "market")', function() {
      // uncomment below and update the code to test the property market
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property mining (base name: "mining")', function() {
      // uncomment below and update the code to test the property mining
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property module (base name: "module")', function() {
      // uncomment below and update the code to test the property module
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property orbital (base name: "orbital")', function() {
      // uncomment below and update the code to test the property orbital
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property pve (base name: "pve")', function() {
      // uncomment below and update the code to test the property pve
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property social (base name: "social")', function() {
      // uncomment below and update the code to test the property social
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

    it('should have the property travel (base name: "travel")', function() {
      // uncomment below and update the code to test the property travel
      //var instane = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      //expect(instance).to.be();
    });

  });

}));
