/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.6
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetCorporationsCorporationIdOutpostsOutpostIdCoordinates', 'model/GetCorporationsCorporationIdOutpostsOutpostIdService'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GetCorporationsCorporationIdOutpostsOutpostIdCoordinates'), require('./GetCorporationsCorporationIdOutpostsOutpostIdService'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.GetCorporationsCorporationIdOutpostsOutpostIdOk = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetCorporationsCorporationIdOutpostsOutpostIdCoordinates, root.EveSwaggerInterface.GetCorporationsCorporationIdOutpostsOutpostIdService);
  }
}(this, function(ApiClient, GetCorporationsCorporationIdOutpostsOutpostIdCoordinates, GetCorporationsCorporationIdOutpostsOutpostIdService) {
  'use strict';




  /**
   * The GetCorporationsCorporationIdOutpostsOutpostIdOk model module.
   * @module model/GetCorporationsCorporationIdOutpostsOutpostIdOk
   * @version 0.7.6
   */

  /**
   * Constructs a new <code>GetCorporationsCorporationIdOutpostsOutpostIdOk</code>.
   * 200 ok object
   * @alias module:model/GetCorporationsCorporationIdOutpostsOutpostIdOk
   * @class
   * @param ownerId {Number} The entity that owns the station (e.g. the entity whose logo is on the station services bar)
   * @param systemId {Number} The ID of the solar system the outpost rests in
   * @param dockingCostPerShipVolume {Number} docking_cost_per_ship_volume number
   * @param officeRentalCost {Number} office_rental_cost integer
   * @param typeId {Number} The type ID of the given outpost
   * @param reprocessingEfficiency {Number} reprocessing_efficiency number
   * @param reprocessingStationTake {Number} reprocessing_station_take number
   * @param standingOwnerId {Number} The owner ID that sets the ability for someone to dock based on standings.
   * @param coordinates {module:model/GetCorporationsCorporationIdOutpostsOutpostIdCoordinates} 
   * @param services {Array.<module:model/GetCorporationsCorporationIdOutpostsOutpostIdService>} A list of services the given outpost provides
   */
  var exports = function(ownerId, systemId, dockingCostPerShipVolume, officeRentalCost, typeId, reprocessingEfficiency, reprocessingStationTake, standingOwnerId, coordinates, services) {
    var _this = this;

    _this['owner_id'] = ownerId;
    _this['system_id'] = systemId;
    _this['docking_cost_per_ship_volume'] = dockingCostPerShipVolume;
    _this['office_rental_cost'] = officeRentalCost;
    _this['type_id'] = typeId;
    _this['reprocessing_efficiency'] = reprocessingEfficiency;
    _this['reprocessing_station_take'] = reprocessingStationTake;
    _this['standing_owner_id'] = standingOwnerId;
    _this['coordinates'] = coordinates;
    _this['services'] = services;
  };

  /**
   * Constructs a <code>GetCorporationsCorporationIdOutpostsOutpostIdOk</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetCorporationsCorporationIdOutpostsOutpostIdOk} obj Optional instance to populate.
   * @return {module:model/GetCorporationsCorporationIdOutpostsOutpostIdOk} The populated <code>GetCorporationsCorporationIdOutpostsOutpostIdOk</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('owner_id')) {
        obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'Number');
      }
      if (data.hasOwnProperty('system_id')) {
        obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
      }
      if (data.hasOwnProperty('docking_cost_per_ship_volume')) {
        obj['docking_cost_per_ship_volume'] = ApiClient.convertToType(data['docking_cost_per_ship_volume'], 'Number');
      }
      if (data.hasOwnProperty('office_rental_cost')) {
        obj['office_rental_cost'] = ApiClient.convertToType(data['office_rental_cost'], 'Number');
      }
      if (data.hasOwnProperty('type_id')) {
        obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
      }
      if (data.hasOwnProperty('reprocessing_efficiency')) {
        obj['reprocessing_efficiency'] = ApiClient.convertToType(data['reprocessing_efficiency'], 'Number');
      }
      if (data.hasOwnProperty('reprocessing_station_take')) {
        obj['reprocessing_station_take'] = ApiClient.convertToType(data['reprocessing_station_take'], 'Number');
      }
      if (data.hasOwnProperty('standing_owner_id')) {
        obj['standing_owner_id'] = ApiClient.convertToType(data['standing_owner_id'], 'Number');
      }
      if (data.hasOwnProperty('coordinates')) {
        obj['coordinates'] = GetCorporationsCorporationIdOutpostsOutpostIdCoordinates.constructFromObject(data['coordinates']);
      }
      if (data.hasOwnProperty('services')) {
        obj['services'] = ApiClient.convertToType(data['services'], [GetCorporationsCorporationIdOutpostsOutpostIdService]);
      }
    }
    return obj;
  }

  /**
   * The entity that owns the station (e.g. the entity whose logo is on the station services bar)
   * @member {Number} owner_id
   */
  exports.prototype['owner_id'] = undefined;
  /**
   * The ID of the solar system the outpost rests in
   * @member {Number} system_id
   */
  exports.prototype['system_id'] = undefined;
  /**
   * docking_cost_per_ship_volume number
   * @member {Number} docking_cost_per_ship_volume
   */
  exports.prototype['docking_cost_per_ship_volume'] = undefined;
  /**
   * office_rental_cost integer
   * @member {Number} office_rental_cost
   */
  exports.prototype['office_rental_cost'] = undefined;
  /**
   * The type ID of the given outpost
   * @member {Number} type_id
   */
  exports.prototype['type_id'] = undefined;
  /**
   * reprocessing_efficiency number
   * @member {Number} reprocessing_efficiency
   */
  exports.prototype['reprocessing_efficiency'] = undefined;
  /**
   * reprocessing_station_take number
   * @member {Number} reprocessing_station_take
   */
  exports.prototype['reprocessing_station_take'] = undefined;
  /**
   * The owner ID that sets the ability for someone to dock based on standings.
   * @member {Number} standing_owner_id
   */
  exports.prototype['standing_owner_id'] = undefined;
  /**
   * @member {module:model/GetCorporationsCorporationIdOutpostsOutpostIdCoordinates} coordinates
   */
  exports.prototype['coordinates'] = undefined;
  /**
   * A list of services the given outpost provides
   * @member {Array.<module:model/GetCorporationsCorporationIdOutpostsOutpostIdService>} services
   */
  exports.prototype['services'] = undefined;



  return exports;
}));


