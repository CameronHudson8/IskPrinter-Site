/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.6
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetCorporationsCorporationIdStructuresService'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GetCorporationsCorporationIdStructuresService'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.GetCorporationsCorporationIdStructures200Ok = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetCorporationsCorporationIdStructuresService);
  }
}(this, function(ApiClient, GetCorporationsCorporationIdStructuresService) {
  'use strict';




  /**
   * The GetCorporationsCorporationIdStructures200Ok model module.
   * @module model/GetCorporationsCorporationIdStructures200Ok
   * @version 0.7.6
   */

  /**
   * Constructs a new <code>GetCorporationsCorporationIdStructures200Ok</code>.
   * 200 ok object
   * @alias module:model/GetCorporationsCorporationIdStructures200Ok
   * @class
   * @param structureId {Number} The Item ID of the structure
   * @param typeId {Number} The type id of the structure
   * @param corporationId {Number} ID of the corporation that owns the structure
   * @param systemId {Number} The solar system the structure is in
   * @param profileId {Number} The id of the ACL profile for this citadel
   * @param state {module:model/GetCorporationsCorporationIdStructures200Ok.StateEnum} state string
   * @param reinforceWeekday {Number} The day of the week when the structure exits its final reinforcement period and becomes vulnerable to attack against its hull. Monday is 0 and Sunday is 6.
   * @param reinforceHour {Number} The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property.
   */
  var exports = function(structureId, typeId, corporationId, systemId, profileId, state, reinforceWeekday, reinforceHour) {
    var _this = this;

    _this['structure_id'] = structureId;
    _this['type_id'] = typeId;
    _this['corporation_id'] = corporationId;
    _this['system_id'] = systemId;
    _this['profile_id'] = profileId;





    _this['state'] = state;
    _this['reinforce_weekday'] = reinforceWeekday;
    _this['reinforce_hour'] = reinforceHour;



  };

  /**
   * Constructs a <code>GetCorporationsCorporationIdStructures200Ok</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetCorporationsCorporationIdStructures200Ok} obj Optional instance to populate.
   * @return {module:model/GetCorporationsCorporationIdStructures200Ok} The populated <code>GetCorporationsCorporationIdStructures200Ok</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('structure_id')) {
        obj['structure_id'] = ApiClient.convertToType(data['structure_id'], 'Number');
      }
      if (data.hasOwnProperty('type_id')) {
        obj['type_id'] = ApiClient.convertToType(data['type_id'], 'Number');
      }
      if (data.hasOwnProperty('corporation_id')) {
        obj['corporation_id'] = ApiClient.convertToType(data['corporation_id'], 'Number');
      }
      if (data.hasOwnProperty('system_id')) {
        obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
      }
      if (data.hasOwnProperty('profile_id')) {
        obj['profile_id'] = ApiClient.convertToType(data['profile_id'], 'Number');
      }
      if (data.hasOwnProperty('fuel_expires')) {
        obj['fuel_expires'] = ApiClient.convertToType(data['fuel_expires'], 'Date');
      }
      if (data.hasOwnProperty('services')) {
        obj['services'] = ApiClient.convertToType(data['services'], [GetCorporationsCorporationIdStructuresService]);
      }
      if (data.hasOwnProperty('state_timer_start')) {
        obj['state_timer_start'] = ApiClient.convertToType(data['state_timer_start'], 'Date');
      }
      if (data.hasOwnProperty('state_timer_end')) {
        obj['state_timer_end'] = ApiClient.convertToType(data['state_timer_end'], 'Date');
      }
      if (data.hasOwnProperty('unanchors_at')) {
        obj['unanchors_at'] = ApiClient.convertToType(data['unanchors_at'], 'Date');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('reinforce_weekday')) {
        obj['reinforce_weekday'] = ApiClient.convertToType(data['reinforce_weekday'], 'Number');
      }
      if (data.hasOwnProperty('reinforce_hour')) {
        obj['reinforce_hour'] = ApiClient.convertToType(data['reinforce_hour'], 'Number');
      }
      if (data.hasOwnProperty('next_reinforce_weekday')) {
        obj['next_reinforce_weekday'] = ApiClient.convertToType(data['next_reinforce_weekday'], 'Number');
      }
      if (data.hasOwnProperty('next_reinforce_hour')) {
        obj['next_reinforce_hour'] = ApiClient.convertToType(data['next_reinforce_hour'], 'Number');
      }
      if (data.hasOwnProperty('next_reinforce_apply')) {
        obj['next_reinforce_apply'] = ApiClient.convertToType(data['next_reinforce_apply'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The Item ID of the structure
   * @member {Number} structure_id
   */
  exports.prototype['structure_id'] = undefined;
  /**
   * The type id of the structure
   * @member {Number} type_id
   */
  exports.prototype['type_id'] = undefined;
  /**
   * ID of the corporation that owns the structure
   * @member {Number} corporation_id
   */
  exports.prototype['corporation_id'] = undefined;
  /**
   * The solar system the structure is in
   * @member {Number} system_id
   */
  exports.prototype['system_id'] = undefined;
  /**
   * The id of the ACL profile for this citadel
   * @member {Number} profile_id
   */
  exports.prototype['profile_id'] = undefined;
  /**
   * Date on which the structure will run out of fuel
   * @member {Date} fuel_expires
   */
  exports.prototype['fuel_expires'] = undefined;
  /**
   * Contains a list of service upgrades, and their state
   * @member {Array.<module:model/GetCorporationsCorporationIdStructuresService>} services
   */
  exports.prototype['services'] = undefined;
  /**
   * Date at which the structure entered it's current state
   * @member {Date} state_timer_start
   */
  exports.prototype['state_timer_start'] = undefined;
  /**
   * Date at which the structure will move to it's next state
   * @member {Date} state_timer_end
   */
  exports.prototype['state_timer_end'] = undefined;
  /**
   * Date at which the structure will unanchor
   * @member {Date} unanchors_at
   */
  exports.prototype['unanchors_at'] = undefined;
  /**
   * state string
   * @member {module:model/GetCorporationsCorporationIdStructures200Ok.StateEnum} state
   */
  exports.prototype['state'] = undefined;
  /**
   * The day of the week when the structure exits its final reinforcement period and becomes vulnerable to attack against its hull. Monday is 0 and Sunday is 6.
   * @member {Number} reinforce_weekday
   */
  exports.prototype['reinforce_weekday'] = undefined;
  /**
   * The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property.
   * @member {Number} reinforce_hour
   */
  exports.prototype['reinforce_hour'] = undefined;
  /**
   * The requested change to reinforce_weekday that will take effect at the time shown by next_reinforce_apply.
   * @member {Number} next_reinforce_weekday
   */
  exports.prototype['next_reinforce_weekday'] = undefined;
  /**
   * The requested change to reinforce_hour that will take effect at the time shown by next_reinforce_apply.
   * @member {Number} next_reinforce_hour
   */
  exports.prototype['next_reinforce_hour'] = undefined;
  /**
   * The date and time when the structure's newly requested reinforcement times (e.g. next_reinforce_hour and next_reinforce_day) will take effect.
   * @member {Date} next_reinforce_apply
   */
  exports.prototype['next_reinforce_apply'] = undefined;


  /**
   * Allowed values for the <code>state</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StateEnum = {
    /**
     * value: "anchor_vulnerable"
     * @const
     */
    "anchor_vulnerable": "anchor_vulnerable",
    /**
     * value: "anchoring"
     * @const
     */
    "anchoring": "anchoring",
    /**
     * value: "armor_reinforce"
     * @const
     */
    "armor_reinforce": "armor_reinforce",
    /**
     * value: "armor_vulnerable"
     * @const
     */
    "armor_vulnerable": "armor_vulnerable",
    /**
     * value: "fitting_invulnerable"
     * @const
     */
    "fitting_invulnerable": "fitting_invulnerable",
    /**
     * value: "hull_reinforce"
     * @const
     */
    "hull_reinforce": "hull_reinforce",
    /**
     * value: "hull_vulnerable"
     * @const
     */
    "hull_vulnerable": "hull_vulnerable",
    /**
     * value: "online_deprecated"
     * @const
     */
    "online_deprecated": "online_deprecated",
    /**
     * value: "onlining_vulnerable"
     * @const
     */
    "onlining_vulnerable": "onlining_vulnerable",
    /**
     * value: "shield_vulnerable"
     * @const
     */
    "shield_vulnerable": "shield_vulnerable",
    /**
     * value: "unanchored"
     * @const
     */
    "unanchored": "unanchored",
    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"  };


  return exports;
}));


