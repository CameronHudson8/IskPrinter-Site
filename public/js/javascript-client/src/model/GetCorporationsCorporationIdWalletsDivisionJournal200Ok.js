/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.6
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetCorporationsCorporationIdWalletsDivisionJournalExtraInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GetCorporationsCorporationIdWalletsDivisionJournalExtraInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.GetCorporationsCorporationIdWalletsDivisionJournal200Ok = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetCorporationsCorporationIdWalletsDivisionJournalExtraInfo);
  }
}(this, function(ApiClient, GetCorporationsCorporationIdWalletsDivisionJournalExtraInfo) {
  'use strict';




  /**
   * The GetCorporationsCorporationIdWalletsDivisionJournal200Ok model module.
   * @module model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok
   * @version 0.7.6
   */

  /**
   * Constructs a new <code>GetCorporationsCorporationIdWalletsDivisionJournal200Ok</code>.
   * 200 ok object
   * @alias module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok
   * @class
   * @param _date {Date} Date and time of transaction
   * @param refId {Number} Unique journal reference ID
   * @param refType {module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok.RefTypeEnum} Transaction type, different type of transaction will populate different fields in `extra_info` Note: If you have an existing XML API application that is using ref_types, you will need to know which string ESI ref_type maps to which integer. You can use the following gist to see string->int mappings: https://gist.github.com/ccp-zoetrope/c03db66d90c2148724c06171bc52e0ec
   */
  var exports = function(_date, refId, refType) {
    var _this = this;

    _this['date'] = _date;
    _this['ref_id'] = refId;
    _this['ref_type'] = refType;










  };

  /**
   * Constructs a <code>GetCorporationsCorporationIdWalletsDivisionJournal200Ok</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok} obj Optional instance to populate.
   * @return {module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok} The populated <code>GetCorporationsCorporationIdWalletsDivisionJournal200Ok</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('date')) {
        obj['date'] = ApiClient.convertToType(data['date'], 'Date');
      }
      if (data.hasOwnProperty('ref_id')) {
        obj['ref_id'] = ApiClient.convertToType(data['ref_id'], 'Number');
      }
      if (data.hasOwnProperty('ref_type')) {
        obj['ref_type'] = ApiClient.convertToType(data['ref_type'], 'String');
      }
      if (data.hasOwnProperty('first_party_id')) {
        obj['first_party_id'] = ApiClient.convertToType(data['first_party_id'], 'Number');
      }
      if (data.hasOwnProperty('first_party_type')) {
        obj['first_party_type'] = ApiClient.convertToType(data['first_party_type'], 'String');
      }
      if (data.hasOwnProperty('second_party_id')) {
        obj['second_party_id'] = ApiClient.convertToType(data['second_party_id'], 'Number');
      }
      if (data.hasOwnProperty('second_party_type')) {
        obj['second_party_type'] = ApiClient.convertToType(data['second_party_type'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('balance')) {
        obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
      }
      if (data.hasOwnProperty('reason')) {
        obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
      }
      if (data.hasOwnProperty('tax_receiver_id')) {
        obj['tax_receiver_id'] = ApiClient.convertToType(data['tax_receiver_id'], 'Number');
      }
      if (data.hasOwnProperty('tax')) {
        obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
      }
      if (data.hasOwnProperty('extra_info')) {
        obj['extra_info'] = GetCorporationsCorporationIdWalletsDivisionJournalExtraInfo.constructFromObject(data['extra_info']);
      }
    }
    return obj;
  }

  /**
   * Date and time of transaction
   * @member {Date} date
   */
  exports.prototype['date'] = undefined;
  /**
   * Unique journal reference ID
   * @member {Number} ref_id
   */
  exports.prototype['ref_id'] = undefined;
  /**
   * Transaction type, different type of transaction will populate different fields in `extra_info` Note: If you have an existing XML API application that is using ref_types, you will need to know which string ESI ref_type maps to which integer. You can use the following gist to see string->int mappings: https://gist.github.com/ccp-zoetrope/c03db66d90c2148724c06171bc52e0ec
   * @member {module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok.RefTypeEnum} ref_type
   */
  exports.prototype['ref_type'] = undefined;
  /**
   * first_party_id integer
   * @member {Number} first_party_id
   */
  exports.prototype['first_party_id'] = undefined;
  /**
   * first_party_type string
   * @member {module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok.FirstPartyTypeEnum} first_party_type
   */
  exports.prototype['first_party_type'] = undefined;
  /**
   * second_party_id integer
   * @member {Number} second_party_id
   */
  exports.prototype['second_party_id'] = undefined;
  /**
   * second_party_type string
   * @member {module:model/GetCorporationsCorporationIdWalletsDivisionJournal200Ok.SecondPartyTypeEnum} second_party_type
   */
  exports.prototype['second_party_type'] = undefined;
  /**
   * Transaction amount. Positive when value transferred to the first party. Negative otherwise
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * Wallet balance after transaction occurred
   * @member {Number} balance
   */
  exports.prototype['balance'] = undefined;
  /**
   * reason string
   * @member {String} reason
   */
  exports.prototype['reason'] = undefined;
  /**
   * the corporation ID receiving any tax paid
   * @member {Number} tax_receiver_id
   */
  exports.prototype['tax_receiver_id'] = undefined;
  /**
   * Tax amount received for tax related transactions
   * @member {Number} tax
   */
  exports.prototype['tax'] = undefined;
  /**
   * @member {module:model/GetCorporationsCorporationIdWalletsDivisionJournalExtraInfo} extra_info
   */
  exports.prototype['extra_info'] = undefined;


  /**
   * Allowed values for the <code>ref_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RefTypeEnum = {
    /**
     * value: "acceleration_gate_fee"
     * @const
     */
    "acceleration_gate_fee": "acceleration_gate_fee",
    /**
     * value: "advertisement_listing_fee"
     * @const
     */
    "advertisement_listing_fee": "advertisement_listing_fee",
    /**
     * value: "agent_donation"
     * @const
     */
    "agent_donation": "agent_donation",
    /**
     * value: "agent_location_services"
     * @const
     */
    "agent_location_services": "agent_location_services",
    /**
     * value: "agent_miscellaneous"
     * @const
     */
    "agent_miscellaneous": "agent_miscellaneous",
    /**
     * value: "agent_mission_collateral_paid"
     * @const
     */
    "agent_mission_collateral_paid": "agent_mission_collateral_paid",
    /**
     * value: "agent_mission_collateral_refunded"
     * @const
     */
    "agent_mission_collateral_refunded": "agent_mission_collateral_refunded",
    /**
     * value: "agent_mission_reward"
     * @const
     */
    "agent_mission_reward": "agent_mission_reward",
    /**
     * value: "agent_mission_reward_corporation_tax"
     * @const
     */
    "agent_mission_reward_corporation_tax": "agent_mission_reward_corporation_tax",
    /**
     * value: "agent_mission_time_bonus_reward"
     * @const
     */
    "agent_mission_time_bonus_reward": "agent_mission_time_bonus_reward",
    /**
     * value: "agent_mission_time_bonus_reward_corporation_tax"
     * @const
     */
    "agent_mission_time_bonus_reward_corporation_tax": "agent_mission_time_bonus_reward_corporation_tax",
    /**
     * value: "agent_security_services"
     * @const
     */
    "agent_security_services": "agent_security_services",
    /**
     * value: "agent_services_rendered"
     * @const
     */
    "agent_services_rendered": "agent_services_rendered",
    /**
     * value: "agents_preward"
     * @const
     */
    "agents_preward": "agents_preward",
    /**
     * value: "alliance_maintainance_fee"
     * @const
     */
    "alliance_maintainance_fee": "alliance_maintainance_fee",
    /**
     * value: "alliance_registration_fee"
     * @const
     */
    "alliance_registration_fee": "alliance_registration_fee",
    /**
     * value: "asset_safety_recovery_tax"
     * @const
     */
    "asset_safety_recovery_tax": "asset_safety_recovery_tax",
    /**
     * value: "bounty"
     * @const
     */
    "bounty": "bounty",
    /**
     * value: "bounty_prize"
     * @const
     */
    "bounty_prize": "bounty_prize",
    /**
     * value: "bounty_prize_corporation_tax"
     * @const
     */
    "bounty_prize_corporation_tax": "bounty_prize_corporation_tax",
    /**
     * value: "bounty_prizes"
     * @const
     */
    "bounty_prizes": "bounty_prizes",
    /**
     * value: "bounty_reimbursement"
     * @const
     */
    "bounty_reimbursement": "bounty_reimbursement",
    /**
     * value: "bounty_surcharge"
     * @const
     */
    "bounty_surcharge": "bounty_surcharge",
    /**
     * value: "brokers_fee"
     * @const
     */
    "brokers_fee": "brokers_fee",
    /**
     * value: "clone_activation"
     * @const
     */
    "clone_activation": "clone_activation",
    /**
     * value: "clone_transfer"
     * @const
     */
    "clone_transfer": "clone_transfer",
    /**
     * value: "contraband_fine"
     * @const
     */
    "contraband_fine": "contraband_fine",
    /**
     * value: "contract_auction_bid"
     * @const
     */
    "contract_auction_bid": "contract_auction_bid",
    /**
     * value: "contract_auction_bid_corp"
     * @const
     */
    "contract_auction_bid_corp": "contract_auction_bid_corp",
    /**
     * value: "contract_auction_bid_refund"
     * @const
     */
    "contract_auction_bid_refund": "contract_auction_bid_refund",
    /**
     * value: "contract_auction_sold"
     * @const
     */
    "contract_auction_sold": "contract_auction_sold",
    /**
     * value: "contract_brokers_fee"
     * @const
     */
    "contract_brokers_fee": "contract_brokers_fee",
    /**
     * value: "contract_brokers_fee_corp"
     * @const
     */
    "contract_brokers_fee_corp": "contract_brokers_fee_corp",
    /**
     * value: "contract_collateral"
     * @const
     */
    "contract_collateral": "contract_collateral",
    /**
     * value: "contract_collateral_deposited_corp"
     * @const
     */
    "contract_collateral_deposited_corp": "contract_collateral_deposited_corp",
    /**
     * value: "contract_collateral_payout"
     * @const
     */
    "contract_collateral_payout": "contract_collateral_payout",
    /**
     * value: "contract_collateral_refund"
     * @const
     */
    "contract_collateral_refund": "contract_collateral_refund",
    /**
     * value: "contract_deposit"
     * @const
     */
    "contract_deposit": "contract_deposit",
    /**
     * value: "contract_deposit_corp"
     * @const
     */
    "contract_deposit_corp": "contract_deposit_corp",
    /**
     * value: "contract_deposit_refund"
     * @const
     */
    "contract_deposit_refund": "contract_deposit_refund",
    /**
     * value: "contract_deposit_sales_tax"
     * @const
     */
    "contract_deposit_sales_tax": "contract_deposit_sales_tax",
    /**
     * value: "contract_price"
     * @const
     */
    "contract_price": "contract_price",
    /**
     * value: "contract_price_payment_corp"
     * @const
     */
    "contract_price_payment_corp": "contract_price_payment_corp",
    /**
     * value: "contract_reversal"
     * @const
     */
    "contract_reversal": "contract_reversal",
    /**
     * value: "contract_reward"
     * @const
     */
    "contract_reward": "contract_reward",
    /**
     * value: "contract_reward_deposited"
     * @const
     */
    "contract_reward_deposited": "contract_reward_deposited",
    /**
     * value: "contract_reward_deposited_corp"
     * @const
     */
    "contract_reward_deposited_corp": "contract_reward_deposited_corp",
    /**
     * value: "contract_reward_refund"
     * @const
     */
    "contract_reward_refund": "contract_reward_refund",
    /**
     * value: "contract_sales_tax"
     * @const
     */
    "contract_sales_tax": "contract_sales_tax",
    /**
     * value: "copying"
     * @const
     */
    "copying": "copying",
    /**
     * value: "corporate_reward_payout"
     * @const
     */
    "corporate_reward_payout": "corporate_reward_payout",
    /**
     * value: "corporate_reward_tax"
     * @const
     */
    "corporate_reward_tax": "corporate_reward_tax",
    /**
     * value: "corporation_account_withdrawal"
     * @const
     */
    "corporation_account_withdrawal": "corporation_account_withdrawal",
    /**
     * value: "corporation_bulk_payment"
     * @const
     */
    "corporation_bulk_payment": "corporation_bulk_payment",
    /**
     * value: "corporation_dividend_payment"
     * @const
     */
    "corporation_dividend_payment": "corporation_dividend_payment",
    /**
     * value: "corporation_liquidation"
     * @const
     */
    "corporation_liquidation": "corporation_liquidation",
    /**
     * value: "corporation_logo_change_cost"
     * @const
     */
    "corporation_logo_change_cost": "corporation_logo_change_cost",
    /**
     * value: "corporation_payment"
     * @const
     */
    "corporation_payment": "corporation_payment",
    /**
     * value: "corporation_registration_fee"
     * @const
     */
    "corporation_registration_fee": "corporation_registration_fee",
    /**
     * value: "courier_mission_escrow"
     * @const
     */
    "courier_mission_escrow": "courier_mission_escrow",
    /**
     * value: "cspa"
     * @const
     */
    "cspa": "cspa",
    /**
     * value: "cspaofflinerefund"
     * @const
     */
    "cspaofflinerefund": "cspaofflinerefund",
    /**
     * value: "datacore_fee"
     * @const
     */
    "datacore_fee": "datacore_fee",
    /**
     * value: "dna_modification_fee"
     * @const
     */
    "dna_modification_fee": "dna_modification_fee",
    /**
     * value: "docking_fee"
     * @const
     */
    "docking_fee": "docking_fee",
    /**
     * value: "duel_wager_escrow"
     * @const
     */
    "duel_wager_escrow": "duel_wager_escrow",
    /**
     * value: "duel_wager_payment"
     * @const
     */
    "duel_wager_payment": "duel_wager_payment",
    /**
     * value: "duel_wager_refund"
     * @const
     */
    "duel_wager_refund": "duel_wager_refund",
    /**
     * value: "factory_slot_rental_fee"
     * @const
     */
    "factory_slot_rental_fee": "factory_slot_rental_fee",
    /**
     * value: "gm_cash_transfer"
     * @const
     */
    "gm_cash_transfer": "gm_cash_transfer",
    /**
     * value: "industry_job_tax"
     * @const
     */
    "industry_job_tax": "industry_job_tax",
    /**
     * value: "infrastructure_hub_maintenance"
     * @const
     */
    "infrastructure_hub_maintenance": "infrastructure_hub_maintenance",
    /**
     * value: "inheritance"
     * @const
     */
    "inheritance": "inheritance",
    /**
     * value: "insurance"
     * @const
     */
    "insurance": "insurance",
    /**
     * value: "jump_clone_activation_fee"
     * @const
     */
    "jump_clone_activation_fee": "jump_clone_activation_fee",
    /**
     * value: "jump_clone_installation_fee"
     * @const
     */
    "jump_clone_installation_fee": "jump_clone_installation_fee",
    /**
     * value: "kill_right_fee"
     * @const
     */
    "kill_right_fee": "kill_right_fee",
    /**
     * value: "lp_store"
     * @const
     */
    "lp_store": "lp_store",
    /**
     * value: "manufacturing"
     * @const
     */
    "manufacturing": "manufacturing",
    /**
     * value: "market_escrow"
     * @const
     */
    "market_escrow": "market_escrow",
    /**
     * value: "market_fine_paid"
     * @const
     */
    "market_fine_paid": "market_fine_paid",
    /**
     * value: "market_transaction"
     * @const
     */
    "market_transaction": "market_transaction",
    /**
     * value: "medal_creation"
     * @const
     */
    "medal_creation": "medal_creation",
    /**
     * value: "medal_issued"
     * @const
     */
    "medal_issued": "medal_issued",
    /**
     * value: "mission_completion"
     * @const
     */
    "mission_completion": "mission_completion",
    /**
     * value: "mission_cost"
     * @const
     */
    "mission_cost": "mission_cost",
    /**
     * value: "mission_expiration"
     * @const
     */
    "mission_expiration": "mission_expiration",
    /**
     * value: "mission_reward"
     * @const
     */
    "mission_reward": "mission_reward",
    /**
     * value: "office_rental_fee"
     * @const
     */
    "office_rental_fee": "office_rental_fee",
    /**
     * value: "operation_bonus"
     * @const
     */
    "operation_bonus": "operation_bonus",
    /**
     * value: "opportunity_reward"
     * @const
     */
    "opportunity_reward": "opportunity_reward",
    /**
     * value: "planetary_construction"
     * @const
     */
    "planetary_construction": "planetary_construction",
    /**
     * value: "planetary_export_tax"
     * @const
     */
    "planetary_export_tax": "planetary_export_tax",
    /**
     * value: "planetary_import_tax"
     * @const
     */
    "planetary_import_tax": "planetary_import_tax",
    /**
     * value: "player_donation"
     * @const
     */
    "player_donation": "player_donation",
    /**
     * value: "player_trading"
     * @const
     */
    "player_trading": "player_trading",
    /**
     * value: "project_discovery_reward"
     * @const
     */
    "project_discovery_reward": "project_discovery_reward",
    /**
     * value: "project_discovery_tax"
     * @const
     */
    "project_discovery_tax": "project_discovery_tax",
    /**
     * value: "reaction"
     * @const
     */
    "reaction": "reaction",
    /**
     * value: "release_of_impounded_property"
     * @const
     */
    "release_of_impounded_property": "release_of_impounded_property",
    /**
     * value: "repair_bill"
     * @const
     */
    "repair_bill": "repair_bill",
    /**
     * value: "reprocessing_tax"
     * @const
     */
    "reprocessing_tax": "reprocessing_tax",
    /**
     * value: "researching_material_productivity"
     * @const
     */
    "researching_material_productivity": "researching_material_productivity",
    /**
     * value: "researching_technology"
     * @const
     */
    "researching_technology": "researching_technology",
    /**
     * value: "researching_time_productivity"
     * @const
     */
    "researching_time_productivity": "researching_time_productivity",
    /**
     * value: "resource_wars_reward"
     * @const
     */
    "resource_wars_reward": "resource_wars_reward",
    /**
     * value: "reverse_engineering"
     * @const
     */
    "reverse_engineering": "reverse_engineering",
    /**
     * value: "security_processing_fee"
     * @const
     */
    "security_processing_fee": "security_processing_fee",
    /**
     * value: "shares"
     * @const
     */
    "shares": "shares",
    /**
     * value: "sovereignity_bill"
     * @const
     */
    "sovereignity_bill": "sovereignity_bill",
    /**
     * value: "store_purchase"
     * @const
     */
    "store_purchase": "store_purchase",
    /**
     * value: "store_purchase_refund"
     * @const
     */
    "store_purchase_refund": "store_purchase_refund",
    /**
     * value: "transaction_tax"
     * @const
     */
    "transaction_tax": "transaction_tax",
    /**
     * value: "upkeep_adjustment_fee"
     * @const
     */
    "upkeep_adjustment_fee": "upkeep_adjustment_fee",
    /**
     * value: "war_ally_contract"
     * @const
     */
    "war_ally_contract": "war_ally_contract",
    /**
     * value: "war_fee"
     * @const
     */
    "war_fee": "war_fee",
    /**
     * value: "war_fee_surrender"
     * @const
     */
    "war_fee_surrender": "war_fee_surrender"  };

  /**
   * Allowed values for the <code>first_party_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FirstPartyTypeEnum = {
    /**
     * value: "character"
     * @const
     */
    "character": "character",
    /**
     * value: "corporation"
     * @const
     */
    "corporation": "corporation",
    /**
     * value: "alliance"
     * @const
     */
    "alliance": "alliance",
    /**
     * value: "faction"
     * @const
     */
    "faction": "faction",
    /**
     * value: "system"
     * @const
     */
    "system": "system"  };

  /**
   * Allowed values for the <code>second_party_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SecondPartyTypeEnum = {
    /**
     * value: "character"
     * @const
     */
    "character": "character",
    /**
     * value: "corporation"
     * @const
     */
    "corporation": "corporation",
    /**
     * value: "alliance"
     * @const
     */
    "alliance": "alliance",
    /**
     * value: "faction"
     * @const
     */
    "faction": "faction",
    /**
     * value: "system"
     * @const
     */
    "system": "system"  };


  return exports;
}));


