/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.6
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.GetFwSystems200Ok = factory(root.EveSwaggerInterface.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The GetFwSystems200Ok model module.
   * @module model/GetFwSystems200Ok
   * @version 0.7.6
   */

  /**
   * Constructs a new <code>GetFwSystems200Ok</code>.
   * 200 ok object
   * @alias module:model/GetFwSystems200Ok
   * @class
   * @param solarSystemId {Number} solar_system_id integer
   * @param ownerFactionId {Number} owner_faction_id integer
   * @param occupierFactionId {Number} occupier_faction_id integer
   * @param victoryPoints {Number} victory_points integer
   * @param victoryPointsThreshold {Number} victory_points_threshold integer
   * @param contested {Boolean} contested boolean
   */
  var exports = function(solarSystemId, ownerFactionId, occupierFactionId, victoryPoints, victoryPointsThreshold, contested) {
    var _this = this;

    _this['solar_system_id'] = solarSystemId;
    _this['owner_faction_id'] = ownerFactionId;
    _this['occupier_faction_id'] = occupierFactionId;
    _this['victory_points'] = victoryPoints;
    _this['victory_points_threshold'] = victoryPointsThreshold;
    _this['contested'] = contested;
  };

  /**
   * Constructs a <code>GetFwSystems200Ok</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetFwSystems200Ok} obj Optional instance to populate.
   * @return {module:model/GetFwSystems200Ok} The populated <code>GetFwSystems200Ok</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('solar_system_id')) {
        obj['solar_system_id'] = ApiClient.convertToType(data['solar_system_id'], 'Number');
      }
      if (data.hasOwnProperty('owner_faction_id')) {
        obj['owner_faction_id'] = ApiClient.convertToType(data['owner_faction_id'], 'Number');
      }
      if (data.hasOwnProperty('occupier_faction_id')) {
        obj['occupier_faction_id'] = ApiClient.convertToType(data['occupier_faction_id'], 'Number');
      }
      if (data.hasOwnProperty('victory_points')) {
        obj['victory_points'] = ApiClient.convertToType(data['victory_points'], 'Number');
      }
      if (data.hasOwnProperty('victory_points_threshold')) {
        obj['victory_points_threshold'] = ApiClient.convertToType(data['victory_points_threshold'], 'Number');
      }
      if (data.hasOwnProperty('contested')) {
        obj['contested'] = ApiClient.convertToType(data['contested'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * solar_system_id integer
   * @member {Number} solar_system_id
   */
  exports.prototype['solar_system_id'] = undefined;
  /**
   * owner_faction_id integer
   * @member {Number} owner_faction_id
   */
  exports.prototype['owner_faction_id'] = undefined;
  /**
   * occupier_faction_id integer
   * @member {Number} occupier_faction_id
   */
  exports.prototype['occupier_faction_id'] = undefined;
  /**
   * victory_points integer
   * @member {Number} victory_points
   */
  exports.prototype['victory_points'] = undefined;
  /**
   * victory_points_threshold integer
   * @member {Number} victory_points_threshold
   */
  exports.prototype['victory_points_threshold'] = undefined;
  /**
   * contested boolean
   * @member {Boolean} contested
   */
  exports.prototype['contested'] = undefined;



  return exports;
}));


