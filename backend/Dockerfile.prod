
## Install frontend

FROM node AS node
WORKDIR /app
COPY ./frontend .
RUN rm -rf package-lock.json node_modules \
  && npm install -g @angular/cli \
  && npm install \
  && ng build --configuration="production"

## Install backend

# Download the ESI client.
FROM alpine AS alpine
WORKDIR /
RUN apk add --no-cache \
        curl \
        jq \
        unzip \
    && curl \
            -X POST "http://generator.swagger.io/api/gen/clients/php" \
            -H "Content-Type: application/json" \
            -d "{ \"swaggerUrl\": \"https://esi.evetech.net/latest/swagger.json\"}" \
        | jq -r '.link' \
        | xargs curl -o /client-generated.zip \
    && unzip /client-generated.zip -d /php-client \
    && rm /client-generated.zip

# Transfer the Eve API. Install dependencies using composer.
FROM composer AS composer
WORKDIR /app
# Copy in all files, including an obsolete vendor directory.
COPY ./backend .
# Remove the obsolete vendor directory (we can't have it in the .dockerignore, because we copy this directory into the nginx image, later)
RUN rm -rf composer.lock vendor
# Copy the ESI client into a new, empty vendor directory
WORKDIR /app/vendor
COPY --from=alpine /php-client .
WORKDIR /app/vendor/php-client/SwaggerClient-php
# Remove the existing vendor directory from the ESI client directory, if any. Then, reinstall the ESI client dependencies.
RUN rm -rf composer.lock vendor \
    && composer install
# Go to the main app directory and install the main app dependencies.
WORKDIR /app
RUN composer install \
    && php artisan key:generate
# Copy in the prebuilt frontend
COPY --from=node /app/dist/frontend /app/public

# Copy in the conf files, the SDE, and the backend+frontend to the nginx server.
FROM richarvey/nginx-php-fpm
WORKDIR /etc/nginx/sites-available
COPY ./etc/nginx/sites-available/ .
#WORKDIR /databases/eve-sde
#COPY --from=alpine /eve-sde/ .
WORKDIR /var/www/html
COPY --from=composer /app .
